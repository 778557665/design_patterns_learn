工厂模式根据抽象程度的不同分为三种：

    简单工厂模式（也叫静态工厂模式）

    工厂方法模式（也叫多形性工厂）

    抽象工厂模式（也叫工具箱）



简单工厂模式

    实质是由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类（这些产品类继承自一个父类或接口）的实例。
    简单工厂模式的创建目标，所有创建的对象都是充当这个角色的某个具体类的实例。



工厂方法模式

    工厂方法是粒度很小的设计模式，因为模式的表现只是一个抽象的方法。
    提前定义用于创建对象的接口，让子类决定实例化具体的某一个类，即在工厂和产品中间增加接口，工厂不再负责产品的创建，由接口针对不同条件返回具体的类实例，由具体类实例去实现。



抽象工厂模式

    当有多个抽象角色时使用的一种工厂模式。
    抽象工厂模式可以向客户端提供一个接口，使客户端在不必指定产品的具体的情况下，创建多个产品对象。
    它有多个抽象产品类，每个抽象产品类可以派生出多个具体产品类，一个抽象工厂类，可以派生出多个具体工厂类，每个具体工厂类可以创建多个具体产品类的实例。